{
    "%vlocity_namespace%__Active__c": true,
    "%vlocity_namespace%__OmniScriptId__c": {
        "Name": "ImplementationCase",
        "VlocityDataPackType": "VlocityMatchingKeyObject",
        "VlocityMatchingRecordSourceKey": "%vlocity_namespace%__OmniScript__c/IMPCase Library/IC-ImplementationCase/English",
        "VlocityRecordSObjectType": "%vlocity_namespace%__OmniScript__c"
    },
    "%vlocity_namespace%__PropertySet__c": {
        "controlWidth": 12,
        "disOnTplt": false,
        "elementValueMap": {
            "HTMLTemplateId": "",
            "Select-IMPType": {
                "SelectIMP": {
                    "AcquisitionBlock": {
                        "CarryOverAccumulatorsDataFiles": "=IF(EQUALS(%IT-Acquisition%,true),%CarryOverAccumulatorsDataFiles%,'')",
                        "GroupStructureImpacts": "=IF(EQUALS(%IT-Acquisition%,true),%GroupStructureImpacts%,'')",
                        "IsTheAcquisitionConfidential": "=IF(EQUALS(%IT-Acquisition%,true),%IsTheAcquisitionConfidential%,'')",
                        "IsTheSaleDateFinal": "=IF(EQUALS(%IT-Acquisition%,true),%IsTheSaleDateFinal%,'')",
                        "WhoIsPriorVendor": "=IF(EQUALS(%IT-Acquisition%,true),%WhoIsPriorVendor%,'')"
                    },
                    "GroupTermBlock": {
                        "ClaimsHistoryTimeframeRequired": "=IF(EQUALS(%IT-GroupTerm%,true),%ClaimsHistoryTimeframeRequired%,'')",
                        "ClaimsRunOutApplied": "=IF(EQUALS(%IT-GroupTerm%,true),%ClaimsRunOutApplied%,'')",
                        "De-ImplementationType": "=IF(EQUALS(%IT-GroupTerm%,true),%De-ImplementationType%,'')",
                        "EstimatedCountOfContractsLost": "=IF(EQUALS(%IT-GroupTerm%,true),%EstimatedCountOfContractsLost%,'')",
                        "IVRImpact": "=IF(EQUALS(%IT-GroupTerm%,true),%IVRImpact%,'')",
                        "IfClaimsRunOutWhichClaimsPlatform": "=IF(EQUALS(%IT-GroupTerm%,true),%IfClaimsRunOutWhichClaimsPlatform%,'')",
                        "IfClientMigratingListNewPlatform": "=IF(EQUALS(%IT-GroupTerm%,true),%IfClientMigratingListNewPlatform%,'')",
                        "IfRecordTransfersRequiredExplain": "=IF(EQUALS(%IT-GroupTerm%,true),%IfRecordTransfersRequiredExplain%,'')",
                        "IndicateAnySpecialDe-ImpAgreements": "=IF(EQUALS(%IT-GroupTerm%,true),%IndicateAnySpecialDe-ImpAgreements%,'')",
                        "IndicateSpecialProcessingReq": "=IF(EQUALS(%IT-GroupTerm%,true),%IndicateSpecialProcessingReq%,'')",
                        "IsAnAnthemClientAcquiringThisGroup": "=IF(EQUALS(%IT-GroupTerm%,true),%IsAnAnthemClientAcquiringThisGroup%,'')",
                        "IsClientMigratingToAnotherPlatform": "=IF(EQUALS(%IT-GroupTerm%,true),%IsClientMigratingToAnotherPlatform%,'')",
                        "ListAllAccumulatorsToBeTransmitted": "=IF(EQUALS(%IT-GroupTerm%,true),%ListAllAccumulatorsToBeTransmitted%,'')",
                        "ListHistoryConversionRequirements": "=IF(EQUALS(%IT-GroupTerm%,true),%ListHistoryConversionRequirements%,'')",
                        "NewCarrierName": "=IF(EQUALS(%IT-GroupTerm%,true),%NewCarrierName%,'')",
                        "PrefixesToBeCancelled": "=IF(EQUALS(%IT-GroupTerm%,true),%PrefixesToBeCancelled%,'')",
                        "ReasonforCancellation": "=IF(EQUALS(%IT-GroupTerm%,true),%ReasonforCancellation%,'')",
                        "RecordTransfersRequired": "=IF(EQUALS(%IT-GroupTerm%,true),%RecordTransfersRequired%,'')",
                        "WhatIsGroupNumberOfAcquiringGroup": "=IF(EQUALS(%IT-GroupTerm%,true),%WhatIsGroupNumberOfAcquiringGroup%,'')"
                    },
                    "MigrationBlock": {
                        "IndicateSystemHere": "=IF(EQUALS(%IT-Migration%,true),%IndicateSystemHere%,'')",
                        "ProvideSystemBeingMigratedFrom": "=IF(EQUALS(%IT-Migration%,true),%ProvideSystemBeingMigratedFrom%,'')",
                        "RenewBasedOnCustomerIntent": "=IF(EQUALS(%IT-Migration%,true),%RenewBasedOnCustomerIntent%,'')",
                        "RenewFinalPaperworkAttached": "=IF(EQUALS(%IT-Migration%,true),%RenewFinalPaperworkAttached%,'')",
                        "RenewWithChangesPost-MBCLockdown": "=IF(EQUALS(%IT-Migration%,true),%RenewWithChangesPost-MBCLockdown%,'')",
                        "RenewedAsMapped": "=IF(EQUALS(%IT-Migration%,true),%RenewedAsMapped%,'')"
                    },
                    "Pre-WorkIMPType": {
                        "RFP": {
                            "IsAProjectPlanNeeded": "=IF(EQUALS(%PreWorkIMPSelect%,'RFP'), %IsAProjectPlanNeeded%,'')",
                            "IsaDecisionsDeliverablesListNeeded": "=IF(EQUALS(%PreWorkIMPSelect%,'RFP'), %IsaDecisionsDeliverablesListNeeded%,'')"
                        },
                        "SBC": {
                            "ContractCodePackagesCustomization": "=IF(EQUALS(%PreWorkIMPSelect%,'SBC'),%ContractCodePackagesCustomization%,'')",
                            "DoesAnthemProduceSBCs": "=IF(EQUALS(%PreWorkIMPSelect%,'SBC'),%DoesAnthemProduceSBCs%,'')",
                            "WantTheSBCCreatedByTheSBCTeam": "=IF(EQUALS(%PreWorkIMPSelect%,'SBC'),%WantTheSBCCreatedByTheSBCTeam%,'')"
                        },
                        "SSCRBuild": {
                            "HaveYouBeenInformedASSCRIsRequired": "=IF(EQUALS(%PreWorkIMPSelect%,'SSCR Build for Client Customization'),%HaveYouBeenInformedASSCRIsRequired%,'')",
                            "NotateWhyYouFeelASSCRIsNeeded": "=IF(EQUALS(%PreWorkIMPSelect%,'SSCR Build for Client Customization'), %NotateWhyYouFeelASSCRIsNeeded%,'')",
                            "WhatAreaDeptProvidedThatDirection": "=IF(EQUALS(%PreWorkIMPSelect%,'SSCR Build for Client Customization'),%WhatAreaDeptProvidedThatDirection%,'')",
                            "WhatIsYourCustomizationDescription": "=IF(EQUALS(%PreWorkIMPSelect%,'SSCR Build for Client Customization'), %WhatIsYourCustomizationDescription%,'')"
                        }
                    },
                    "RetroBlock": {
                        "AdditionalReasonDetails": "=IF(EQUALS(%IT-Retro%,true),%AdditionalReasonDetails%,'')",
                        "ApplyClaimsStop": "=IF(EQUALS(%IT-Retro%,true),%ApplyClaimsStop%,'')",
                        "IfEffectiveDateIsRetro": "=IF(EQUALS(%IT-Retro%,true),%IfEffectiveDateIsRetro%,'')",
                        "ReasonForRetro": "=IF(EQUALS(%IT-Retro%,true),%ReasonForRetro%,'')"
                    },
                    "SpinOffBlock": {
                        "CarryOverAccumulatorsOrDataFiles": "=IF(EQUALS(%IT-SpinOff%,true),%CarryOverAccumulatorsOrDataFiles%,'')",
                        "IsTheSpinOffConfidential": "=IF(EQUALS(%IT-SpinOff%,true),%IsTheSpinOffConfidential%,'')",
                        "IsTheSpinoffSaleDateFinal": "=IF(EQUALS(%IT-SpinOff%,true),%IsTheSpinoffSaleDateFinal%,'')",
                        "WillTherebePortability": "=IF(EQUALS(%IT-SpinOff%,true),%WillTherebePortability%,'')"
                    },
                    "TransferMarketBlock": {
                        "IfOtherIndicateComingFromSystem": "=IF(EQUALS(%IT-TransferMarketSegment%,true),%IfOtherIndicateComingFromSystem%,'')",
                        "MovingFrom": "=IF(EQUALS(%IT-TransferMarketSegment%,true),%MovingFrom%,'')",
                        "ProvideSystemComingFrom": "=IF(EQUALS(%IT-TransferMarketSegment%,true),%ProvideSystemComingFrom%,'')"
                    }
                }
            },
            "message": {
            },
            "showPersistentComponent": {
                "vlcCart": false,
                "vlcKnowledge": false
            },
            "ssm": false,
            "wpm": false
        },
        "label": "SetValues19",
        "message": {
        },
        "show": null,
        "showPersistentComponent": [
            false,
            false
        ],
        "ssm": false,
        "validationRequired": "None",
        "wpm": false
    },
    "%vlocity_namespace%__ReusableOmniScript__c": false,
    "%vlocity_namespace%__Type__c": "Set Values",
    "Name": "SetValues19",
    "VlocityDataPackType": "SObject",
    "VlocityRecordSObjectType": "%vlocity_namespace%__Element__c",
    "VlocityRecordSourceKey": "%vlocity_namespace%__Element__c/%vlocity_namespace%__OmniScript__c/IMPCase Library/IC-ImplementationCase/English/SetValues19"
}